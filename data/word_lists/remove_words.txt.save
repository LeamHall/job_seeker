experience
in
of
a
condidered
and
like

&
)
+
-
/
–
0
000+
01
1
(10)
10
10+
100%
12
2
2+
(20
24x7
27001
(3)
3
3+
30-days
3-5
4
4+
(5)
5
5+
5-7
6
6x
7
7+
7/8
7/rhel
7x
8
8)
8+
8-12
(8yrs)
9
(a
a
ab
abilities
ability
able
about
acceptable)
access
accordingly
account
accredited
accuracy/integrity
accurately
achieve
acquire
acquiring
across
action
actions
active
actuate)
adapt
additional
address
adhering
adjudicated
administer
administering
administration
administration:
administrative
administrator
adns
advanced
advantage)
advantages)
agencies
agency
agent
agile:
agile/safe
agilist
ahead
aid
(aix
aks
aks)
alarming
all
also
alternatives
an
analysis
analysis:
analytical
-analyze
analyze
analyzing
and
and/or
annually
another
(ansible
ansible)
+-any
any
api
appdynamics
(applicable
applicants
application
applications
apply
applying
appreciation
approach
approaches
aptitude
architect)
are
areas
arm/bicep/devops
army
articulate
artifact
artifactory)
artifacts
as
as:
ashore
asm
aspects
assess
assesses
assessing
assessment
assessments
assets
assignments
assist
associate
associated
assurance
at
ato
attention
attention-to-detail
audiences
auditing
authentication
authority
authorization
automate
automated
automating
automation
automations
automation/scripting
autosys
availability
aviatrix
awareness
awareness/experience
(aws)
aws-dop)
(azure
azure/aws
(azure/aws/gcp/oci)
b
ba/bs
bachelor
bachelor's
bachelors
background
backgrounds
backup
balancing
based
baseline
baseline:
bases
(bash
bash)
bash/python/ruby/powershell/golang
basic
batch
batch/streaming
(bazel
be
because
before
being
beneficial:
best
beyond
bi
bi)
bias
bind
board
bonus
boot
both
bottlenecks
box
branching
break/fix
bridges
bring:
broad
browser
bs
bs/ba
build
builder
building
buildkite
business
but
by
c)
(c3p)
cac/job
calendars
call
can
candiates
candidates
canes
capabilities
capable
capture
capturing
card
career
cause
cbp
ccp/cloudformation
cd
cd)
cdc
ce)
center
centos
centos)
certification:
(certifications
certification(s)
(certified
certified
challenges
change
changes
chef)
(ci/cd)
cis
cisco/meraki
citrix
cka
cka)
classified
cleaning
clear
clearance;
clearly
client
clients’
clinical
clinicians/researchers
closely
cloud-to-cloud
(cm)
(cms)
coach
code)
coded/scripted
code/script
coding
collaborate
collaborating
collaboration
collaborations
collaboratively
collected
collection
college
combination
combined
comfort
comfortable
command
command-line
commerce
commercial
commitment
commits
common
communicate
communication
communication:
communications
commvault
comparable
competencies:
competently
complete
completion
complex
complexity
compliance
compliant
components
comprehensive
compute
(computer
computer
computing
concept
concepts
concepts:
concise
concurrently
condition
conditional
conduct
-confer
configuration:
configurations
configuring
confluence
consequence
considerations
considered
considered)
consistent
console
consortia
constraints
consultant/client
container/
containerized
context
continuous
contract
contracts
contributing
control
controls
con-us
cookie
coordinate
core
correct
correlation
cost
cost-effective
coupled
cover
(cpu
create
creating
creation
critical
(cross
cross-domain
cross-functional
csm
csp
cspo
csps
-current
current
currently
custom
customer
customers
cycle
dashboard
dashboards
(dast)
data
databases
data-oriented
datapower
datasets
db
dco
deadlines
debug
decision-makers
decompose
deep
defense
defensive
degree
degree)
degree:
delighting
deliverables
delivering
delivery
dell
demonstrable
demonstrate
demonstrated
demonstrates
demonstration
deploy
deploying
deploying;
deployment
deployments
derivative
design
designing
designs
desirable
desire
desired
desired:
destruction
detail
detail-oriented
determine
develop
developers
developing
development
development/engineering
devices
dhs
diagnose
dig
direct
direction
directives
directly
directory
discipline
disclosure
discuss
diseases
disk
diskless
display
distributed
distributions
dive
diverse
dns
do
(docker
-documentation
don
(don't
drive
driven
driving
dsc
dsl
during
duties
dynamic
dynamodb
dynatrace
(e
e
eager
economics
(edc)
editing
education
effective
effectively
effectiveness
efficient
efficiently
efforts
(eg
eight
(eks
electronic
eligibility
employment
encryptions
end
end-point
end-to-end
engaged
engagement
engaging
engineering/engineering
engineers
engines
(english)
enhance
enhancements
ensure
ensuring
enterprise
enterprise-level
entire
environment
environments
environments)
eod
eo/ir
(equivalent
equivalent
equivalent)
error
errors
escalated
especially
essential
established
etc
ethernet)
ethical
evaluating
event-driven
events
eventually
every
(ex
exadata
excellence
excellent
exceptional
execute
execution
executive
executive-level
exemplary
existing
exp
expansive
expectations
-experience
experience
experience)
experience:
experience;
experienced
experiencing
expert
expertise
explain
explaining
extensive
extensively
external
fabric
facilitate
failures
familiar
familiarity
faqs
far-reaching
fast-paced
feasibility
federal
fedramp-certified
field
field;
field/major
fields
file
files
filesystem
financial
find
first
fisma
five
flow
fluent
(flux
flux
focus
focused
following
following:
for
formal
forward
fostering
foundations
four
framework
frameworks
from
(ftp/nfs/cifs/samba)
fulfilling
full
fully
functional
functionality
functions
fundamental
fundamentals
g
(g2)
gaps
gateway
gather
gathering
(gcp)
gcux
general
generation
geographic
get
(github
gke
go)
good
google
govcloud
governing
government
group
group-thinking
grow
growth
guidance
guidelines
handling
hands-on
haproxy
hardware
hardware/software
has
hat
have
health
healthcare
(helm
help
heterogeneous
high
higher
high-level
highly
hipaa
hire
his
host
hosting
hours
how
(hpc)
hpcm)
html
(http
human
hybrid
hyper-v)
(i
i
ia
iaas
(iac)
iat
(iavm)
ideas
ideation
identify
identity
ie
ii
(il4
il6
il6)
image
images
impact
impacts
implement
implementation
implementing
improve
improvement
in
inadvertent
incident
incidents
include
includes
including
including:
increase
independently
in-depth
industrial
industry
infectious
infiniband
influence
information
information;
(infrastructure
infrastructure-as-code
infrastructure-based
infrastructure/configuration
infrastructures
ingestion
insights
inspections
install
(installation
installation
installations
installing
integrating
integration
integration)
integration/continuous
intentional
interact
interconnect
interface
interfaces
interim
intermediate
internal
interpersonal
interpersonal/communication
interpolations
interpreting
intervention
into
investigation
involve
involved
is
iso
issues
it
its
itsm
j2ee
(jenkins
job
jobs
jobtrac
join
keep
keeping
key
knowledge
knowledge:
kubernetes)
kvm)
l1
l-2
l2
language
language)
language)-7+years
languages
languages:
large
last
lead
leadership
leading
lean
learn
learned
learning
least
legacy
level
levels
leverage
leveraging
licensing
licensing/subscription
lieu
life
lifecycle
lights
like
limitations
limited
line
linux)
linux:
linux/aix/solaris/mac
load
local
locate
-logging
logging
logic
logical
look
looking
lpi
(m
machines
main
mainframe
mainly
maintain
maintaining
maintenance
maintenance)
major
making
manage
management
management:
management/scheduling
manager
managing
manipulate
manual
-manually
markup
master’s
math
mathematics
may
meaningful
measures
medicaid
medicare
meet
meeting
members
memory
mentor
mesh
message
methodologies
methodology
methods
metrics
microservice
microsoft
microsoft:
middleware
middleware:
middleware/reporting
middleware/systems/services
mid-level
might
migration
mindset
(minimum
minimum
mis
mission
missions
mitigate
mitigation
models
modern
modernization
modification
-modify
modular
monitor
(monitoring
monitoring
more
most
ms
multidisciplinary
multi-petabyte
multi-platform
multiple
multitask
multi-tasking
multi-threading
must
(mysql
(nas)
native
navigate
navy
necessary
need
needed
needs
network-attached
networked
networking:
networks
new
nfs)
nice
noc
non-government
non-technical
normal
not
novice
o
obsession
obtain
obtained
obtain/maintain
(oci-compliant
offerings
offers
office
on
onboarding
on-call
one
on-premise
openshift)
openshift/kubernetes
operating
operation
operational
operations
opportunity
optimal
optimization
optimize
optimizing
options
(or
or
(oracle)
oral
orca
orchestration)
orchestrations
order
organizational
organizations
oriented
os)
os-level
other
other)
others
our
out
outages
outcomes
outside
overall
own
ownership
paas
paas/saas
package
packages
packer
packet
pages
parameter
part
participant
participating
particular)
(particularly
particularly
partners
partnerships
party
pass
passion
passionate
patching
patient
patterns
pavilion
pbspro
pci
people
per
perform
performance
performed
performing
personnel
physics
pipeline
pipelines
piv
place
planning
plans
platform
platform)
platforms
player
plays
plus
plus)
pmi-acp
points
policies
policy
portable
portal
porting
position
positive
possess
possession
postgresql)
postgressql)
power
powershell)
practice
practices
practitioner
pragmatic
prefer
preferably
(preferred)
preferred
preferred:
pre/post
presentation
presentations
pressure
(previous
previous
(primarily
principles
prior
priorities
prioritize
privacy
privileged
proactive
proactively
problem
problems
problem-solving
procedure
procedures
process
processes
processing
produce
product
production
productivity
products
products:
professional
professionals
proficiency
proficient
programming/scripting
programs
project
projects
(prometheus
proof
proposed
protect
protection
protocol
protocols
proven
-provide
provide
provided
providers
provides
providing
provisioning
public
pulling
puppet)
(python
python)
q
qmulous
qualifications:
quality
quasi-governmental
quickly
r
r)
rac
range
ranging
rather
(rca)
rdbms
reactjs
ready
recommendations
recruiting
recruitment
red
reframe)
regarding
registries
regression
regularly
regulated
regulations
regulatory
related
related)
relational
relations
relationship
release
reliability
reliable
relic
relying
remote
repeat
report
reporting
repositories
(required)
required
required:
required;
requirement
requirements
requires
research
research;
residency
resolution
resolve
resolving
resource
resources
respond
responsibilities
responsible
rest
restore
rest/restful
retrieve
review
reviewing
(rhce)
(rhcsa)
(rhel
(rhel)
rhel)
risk
risks
robust
role
roles
rollback
rollout
root
rotation
roughly
routine
routing
rpc)
run
rundeck
s
safe
(sast)
satellite
satellite/spacewalk
satisfaction
scalability
scale
scaling
scanner
scans
scap/stig
scheduler
schedulers
schedules
scheduling
sci
science
science/systems
scientific
scripting
scripting:
scrum/kanban
(sdlc)
seamless
(sec+
sector
secure
(security+
security:
selected
selenium)
self-repair
senior
sense
server
servers
servers)
server-side
service
service-oriented
services
services:
sessions
set
sets
shared
sharepoint
sharing
(shell
shell(bash)
(similar
similar
single-page
site
situations
skill
skilled
slurm)
small
smart
sme
snapshots
(software)
software)
(software)-7+years
solid
solution
solution-oriented
solutions
solve
solver
solving
some
sonatype
sound
sox)
spack
speaking
specialist
specialized
specifically
speed
spoken
sponsorship
(sql
(sql)
sr
sre/systems
stacks
staff
stakeholder
stakeholders
standard
standards
starting
starting)
startup
state
states
static
statistical
status
stem
step
stigs
stigs)
storage
-store
store
strategic
strategies
streamline
-strong
strong
strongly
structured
subject
subjects
submission
subnets
substituted
substituted)
subsystems
successful
such
suffice
supermicro
supervision
supervisor
support
supporting
sure
sustainment
switching
(system
system
systematic
systems
systems-level
systems/services
systems/technology
t5
tableau
take
tasks
tb
(tcp/ip
team
team-based
teams
teamwork
technical
technically
techniques
technologies
technologies:
technology
ten
terms
terraform/hcl)
test
testers
testing
tests
than
that
(the
the
their
them
then
they
think
thinker
thinking
third
this
thorough
those
three
through
ticketing
tight
time
timelines
time-management
times
to
to:
together
tool
tools
tools:
toolsets
tools/systems
topics
topology
traceroute
trade-offs
traffic
train
training
training:
transfer
translate
travel
trends
trial
trials
troubleshoot
-troubleshooting
troubleshooting)
troubleshooting:
true
trust
ttps
tuberculosis
tuning
two
type
typical
u
under
understand
understanding
understanding:
unexpected
unfamiliar
unit
united
university
unstructured
up
upgrade
upgrade/maintain
upgrades
urbancode
us
usage
use
used
user
using
utilization
utilizing
validation
value
variants
variety
various
vendors
verbal
versed
version
vertical
virtual
virtualization
visa
visualization
vital
(vmware
(vpc
vulnerabilities
vulnerability
ways
we
weekend
weeks
well
we’re
what
whether
which
while
white
who
whole
wide
wiki’s
will
willing
willingness
(windows
with
within
without
workflow
workflows
working
workload
writing
written
(xcat
xml)
xml-rpc
x/others
year
years'
years)
years’
you
you'll
your
yourself)
linux-7+years
gitlab-7+years
6+
5+
3+
+-any
casp+
cysa+
(software)-7+years
language)-7+years
8+
4+
2+
+
(sec+
7+
c++
(security+
10+
000+
20
21
30
37
53/53a
7+years
8570
8yrs
acceptable
actuate
admin
advantage
advantages
applicable
architectural
architecture
architectures
artifactory
attached
bachelor’s
con
confer
decision
depth
developer
don't
dop
edc
eg
english
event
far
fast
fastly
g2
hands
governmental
hyper
ibm
il4
l
m
makers
manually
mid
modify
multi
non
offs
open
paced
page
parallel
particular
petabyte
pmi
point
premise
primarily
quasi
rca
reaching
reframe
relevant
repair
scalable
scope
self
series
side
single
skills
software
source
sscp"
tasking
tenable
threading
top
trade
v
work
x
years
yourself

